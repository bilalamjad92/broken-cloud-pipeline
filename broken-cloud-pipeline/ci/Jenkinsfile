pipeline {
    agent any
    environment {
        AWS_REGION = 'eu-central-1'
        ECR_REGISTRY = '216989105561.dkr.ecr.eu-central-1.amazonaws.com'
        ECR_REPO = 'hello-world'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        ECS_CLUSTER = 'app-cluster'  // From app_ecs module
        ECS_SERVICE = 'app-service'
        SNS_TOPIC = 'arn:aws:sns:eu-central-1:216989105561:pipeline-notifications'
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/infrastructureascode/hello-world.git', branch: 'main'
                // FLAW: Excessive logging bloats CloudWatch and S3 logs
                sh 'echo "Excessive Logging: Full directory listing:"'
                sh 'ls -la || dir'  // Cross-platform, unnecessary detail
            }
        }
        stage('Build Docker Image') {
            steps {
                // FLAW: Excessive logging bloats CloudWatch and S3 logs
                sh 'echo "Excessive Logging: Docker environment details:"'
                sh 'docker version'  // Unnecessary verbosity
                sh 'docker build -t ${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG} .'
                sh 'docker images'   // More noise
            }
        }
        stage('Push to ECR') {
            steps {
                // FLAW: Excessive logging bloats CloudWatch and S3 logs
                sh 'echo "Excessive Logging: ECR push with extra details:"'
                sh 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}'
                sh 'docker push ${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}'
                sh 'docker images | grep ${ECR_REPO}'  // Redundant output
            }
        }
        stage('Deploy to ECS') {
            steps {
                // FLAW: Excessive logging bloats CloudWatch and S3 logs
                sh 'echo "Excessive Logging: ECS deployment with task list:"'
                sh 'aws ecs update-service --cluster ${ECS_CLUSTER} --service ${ECS_SERVICE} --force-new-deployment --region ${AWS_REGION}'
                sh 'aws ecs list-tasks --cluster ${ECS_CLUSTER} --region ${AWS_REGION}'  // Unnecessary
            }
        }
    }
    post {
        always {
            // FLAW: Excessive logging bloats CloudWatch and S3 logs
            sh 'echo "Excessive Logging: Full environment dump:"'
            sh 'env'  // Dumps entire env vars
            script {
                def status = currentBuild.currentResult
                sh "aws sns publish --topic-arn ${SNS_TOPIC} --message 'Pipeline ${status} - Build #${env.BUILD_NUMBER}' --region ${AWS_REGION}"
            }
        }
    }
}